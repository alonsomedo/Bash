# ------------------------------------------------
# PRINCIPAL LINUX COMMANDS
# ------------------------------------------------

# List file and folders 
ls [path]

# Copy files or folders 
# r: recursive
# When we copy a file, the copied file get as owner the user that executes the command.
cp -r [origin-path] [destination-path]

# Create a folder
mkdir [folder-name]

# Move folder or files
# r: recursive
mv -r [folder/file path] [destination-path]

# Delete folder or file
# r: recursive | f: force
rm -rf [folder/file name]

# Create a file
# touch is used to create empty files
touch [file_name]

# See the text inside a file
cat [file-name]

# Overwrite in a text file
echo "text" > [file-name]

# Append in a text file
echo "text" >> [file-name]

# Commands about disk usage
# df (disk free) brings information about system partitions. 
# du (disk usage) brings information about the usage disk of the selected path
# h: shows in kb, mb, gb | s: avoid recursiviness in a directory
df 
df -sh [path]
du -sh [path]

# Links
# ln creates a strong link by default using -s we create a soft link 
# a strong link points information to the disk, only works for files
# a soft link points to the path
ln [file] [mapping_link]
ln -s [file] [mapping_link] 

# Special characters
asterisk symbol (*) is equivalent to any sequence of character in the name of an element
interrogation symbol (?) is equivalent just to one character

# -------------------------------------------------
# PERMISSIONS 
# -------------------------------------------------

# Enter as a root user 
sudo su
sudo -i

# Users always belongs to a group, also they can be part of different groups
# Group the user belongs
group
id [username]
# To identify myself
whoami

# Create a user, by default also creates a group with the same name of the user.
adduser [username]

# Create a group
addgroup [group-name]

# Change the principal group of the user
usermod -g [group-name]

# Change propietary of a file, you need to be root
# chown means change owner 
chown [new-username]:[new-group-name]

# Change password, root can change password of any user
passwd [username]

# Permissions on Files
# --------------------
# r: read permission
# w: write permission
# x: execute permission

# -rw-rw-rw- fie-name
# The first 3 spaces indicates user permissions.
# The second ones indicates group permissions.
# The last ones indicates others permissions.
# The order is always r, w, x

# Permissions on Directories
# --------------------------
# d: directory
# r: list content
# w: modify content (delete included)
# x: access to content

# Given Permissions
-------------------
# u: permissions only for users
# g: permissions only for groups
# o: permissions for others
# a: By default change permissions for all (u, g, o)

# Provide permission
--------------------
chmod +r [file-name]
chmod u+r [file-name]
chmod u+r, g+x [file-name]
chmod u=w, o=rx [file-name]

# Using binary numbers
rw- r-- --- 110 100 000
in octal 640 
chmod 640 [file-name]


# Remove Permissions
--------------------
chmod -r Permissions
